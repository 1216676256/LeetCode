#include <iostream>
#include<cstdio>
#include<vector>
#include<queue>
#include<malloc.h>
#include<map>
#include<cstring>
using namespace std;
void print(int a[]){
    for(int x : a)
        cout<<x<<endl;
}
int Partition(int A[], int low, int high){
    int tmp = A[low];
    while(low < high){
        while(low < high && A[high] >= tmp)   --high;
        A[low] = A[high];
        while(low < high && A[low] <= tmp)  ++low;
        A[high] = A[low];
    }
    A[low] = tmp;
    return low;
}
void QuickSort(int A[], int low, int high){
    if(low >= high)
        return ;
    int partition = Partition(A, low, high);
    QuickSort(A, low, partition - 1);
    QuickSort(A, partition + 1, high);
}

void AdjustDown(int A[], int k ,int len){
    A[0] = A[k];
    for(int i = 2 * k; i <= len; i *= 2){  //这里是i * = 2
        if(i + 1 <= len && A[i] < A[i + 1])
            i++;
        if(A[0] >= A[i])  break;  //这里是A[0] 和 A[i]  比较
        else{
            A[k] = A[i];
            k = i;
        }
    }
    A[k] = A[0];
}
void BuildMaxHeap(int A[],int len){
    for(int i = len /2; i > 0; --i){
        AdjustDown(A, i, len);
    }
}
void HeapSort(int A[], int len){
    BuildMaxHeap(A, len);
    cout<<"AAAA"<<endl;
    for(int i = 1; i <= 10; ++i){
        cout<<A[i]<<endl;
    }
    //等于1 应该没事
    for(int i = len; i > 1; i--){
        swap(A[i], A[1]);
        AdjustDown(A, 1, i - 1);
    }
}
int main(){
    /**int a[10] = {10,9,8,7,6,5,4,3,2,1};                                                            n
    QuickSort(a, 0, 9);
    for(int i = 0; i <= 9; ++i)
        cout<<a[i] <<endl;*/
    //int a[10] = {10,9,8,7,6,5,4,3,2,1};
    int a[11] = {100,1,2,3,4,5,6,7,8,9,10};
    HeapSort(a, 10);
    cout<<"BBB"<<endl;
    for(int i = 1; i <= 10; ++i){
        cout<<a[i]<<endl;
    }
    return 0;
}
